org: devingen
app: devingen-io
service: kimlik-api

frameworkVersion: '^3.1.1'

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  environment:
    KIMLIK_API_MONGO_URI: ${param:KIMLIK_API_MONGO_URI}
    KIMLIK_API_JWT_SIGN_KEY: ${param:KIMLIK_API_JWT_SIGN_KEY}
    KIMLIK_API_WEBHOOK_HEADERS: ${param:KIMLIK_API_WEBHOOK_HEADERS}
    KIMLIK_API_WEBHOOK_URL: ${param:KIMLIK_API_WEBHOOK_URL}

package:
  patterns:
    - '!./**'
    - ./bin/**
  individually: true

functions:
  oauth-token:
    handler: bootstrap
    package:
      artifact: bin/oauth-token.zip
    events:
      - http:
          path: /{base}/oauth/token
          method: post
          cors: true
          request:
            parameters:
              paths:
                base: true

  create-session:
    handler: bootstrap
    package:
      artifact: bin/create-session.zip
    events:
      - http:
          path: /{base}/sessions
          method: post
          cors: true
          request:
            parameters:
              paths:
                base: true

  get-session:
    handler: bootstrap
    package:
      artifact: bin/get-session.zip
    events:
      - http:
          path: /{base}/session
          method: get
          cors: true
          request:
            parameters:
              paths:
                base: true

  register-with-email:
    handler: bootstrap
    package:
      artifact: bin/register-with-email.zip
    events:
      - http:
          path: /{base}/register
          method: post
          cors: true
          request:
            parameters:
              paths:
                base: true

  login-with-email:
    handler: bootstrap
    package:
      artifact: bin/login-with-email.zip
    events:
      - http:
          path: /{base}/login
          method: post
          cors: true
          request:
            parameters:
              paths:
                base: true

  change-password:
    handler: bootstrap
    package:
      artifact: bin/change-password.zip
    events:
      - http:
          path: /{base}/auth/password
          method: put
          cors: true
          request:
            parameters:
              paths:
                base: true

  anonymize-user:
    handler: bootstrap
    package:
      artifact: bin/anonymize-user.zip
    events:
      - http:
          path: /{base}/users/{id}/anonymize
          method: post
          cors: true
          request:
            parameters:
              paths:
                base: true
                id: true

  activate-user:
    handler: bootstrap
    package:
      artifact: bin/activate-user.zip
    events:
      - http:
          path: /{base}/activate
          method: post
          cors: true
          request:
            parameters:
              paths:
                base: true

  find-users:
    handler: bootstrap
    package:
      artifact: bin/find-users.zip
    events:
      - http:
          path: /{base}/users
          method: get
          cors: true
          request:
            parameters:
              paths:
                base: true

  create-api-key:
    handler: bootstrap
    package:
      artifact: bin/create-api-key.zip
    events:
      - http:
          path: /{base}/api-keys
          method: post
          cors: true
          request:
            parameters:
              paths:
                base: true

  find-api-keys:
    handler: bootstrap
    package:
      artifact: bin/find-api-keys.zip
    events:
      - http:
          path: /{base}/api-keys
          method: get
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true

  update-api-key:
    handler: bootstrap
    package:
      artifact: bin/update-api-key.zip
    events:
      - http:
          path: /{base}/api-keys/{id}
          method: put
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true
                id: true

  delete-api-key:
    handler: bootstrap
    package:
      artifact: bin/delete-api-key.zip
    events:
      - http:
          path: /{base}/api-keys/{id}
          method: delete
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true
                id: true

  verify-api-key:
    handler: bootstrap
    package:
      artifact: bin/verify-api-key.zip
    events:
      - http:
          path: /{base}/api-keys/verify
          method: get
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true

  create-saml-config:
    handler: bootstrap
    package:
      artifact: bin/create-saml-config.zip
    events:
      - http:
          path: /{base}/saml-configs
          method: post
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true

  find-saml-configs:
    handler: bootstrap
    package:
      artifact: bin/find-saml-configs.zip
    events:
      - http:
          path: /{base}/saml-configs
          method: get
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true

  update-saml-config:
    handler: bootstrap
    package:
      artifact: bin/update-saml-config.zip
    events:
      - http:
          path: /{base}/saml-configs/{id}
          method: put
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true
                id: true

  delete-saml-config:
    handler: bootstrap
    package:
      artifact: bin/delete-saml-config.zip
    events:
      - http:
          path: /{base}/saml-configs/{id}
          method: delete
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true
                id: true

  build-saml-auth-url:
    handler: bootstrap
    package:
      artifact: bin/build-saml-auth-url.zip
    events:
      - http:
          path: /{base}/saml-configs/{id}/build
          method: post
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true
                id: true

  login-with-saml:
    handler: bootstrap
    package:
      artifact: bin/login-with-saml.zip
    events:
      - http:
          path: /{base}/saml-configs/{id}/login
          method: get
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true
                id: true

  consume-saml-auth-response:
    handler: bootstrap
    package:
      artifact: bin/consume-saml-auth-response.zip
    events:
      - http:
          path: /{base}/saml-configs/{id}/consume
          method: post
          cors:
            headers: "*"
          request:
            parameters:
              paths:
                base: true
                id: true
